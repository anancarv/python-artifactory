name: Check code

on: [pull_request, push]

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: 3.10

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
        version: 1.6.1

    - name: Load cached dependencies
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction

    - name: Lint with pre-commit
      run: |
        poetry run pre-commit run --all-files

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v3
      - uses: szenius/set-timezone@v1.2
        with:
          timezoneLinux: "Europe/Berlin"

      - name: Set up Python ${{ matrix.python-version }}
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        run: |
          pip install poetry==1.6.1
          poetry --version
          poetry self show plugins
          poetry config virtualenvs.in-project true

      - name: Load cached dependencies
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: |
          poetry env use python${{ matrix.python-version }}
          poetry install --no-interaction

      - name: Install PyTest
        run: |
          pip install install pytest pytest-md pytest-emoji

      - name: Run pytest
        uses: pavelzw/pytest-action@v2
        with:
          emoji: true
          verbose: false
          job-summary: true
          custom-arguments: '--cov=pyartifactory --cov-branch --cov-report=xml'
          report-title: 'PyArtifactory Test Report'
          click-to-expand: true

      - name: Coveralls
        uses: coverallsapp/github-action@v2
